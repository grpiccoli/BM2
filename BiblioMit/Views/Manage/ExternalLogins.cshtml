@model ExternalLoginsViewModel
@{
    ViewData["Title"] = "Administrar sus inicios de sesión externos";
    ViewData.AddActivePage(ManageNavPages.ExternalLogins);
}

<partial name="_StatusMessage" for="StatusMessage" />
@if (Model.CurrentLogins?.Count > 0)
{
    <h4>Inicios de Sesi&oacute;n externos Registrados</h4>
    <table class="table">
        <tbody>
            @foreach (var login in Model.CurrentLogins)
            {
                <tr>
                    <td>@login.LoginProvider</td>
                    <td>
                        @if (Model.ShowRemoveButton)
                        {
                            <form asp-action="RemoveLogin" method="post">
                                <div>
                                    <input asp-for="@login.LoginProvider" name="LoginProvider" type="hidden" />
                                    <input asp-for="@login.ProviderKey" name="ProviderKey" type="hidden" />
                                    <button type="submit" class="btn btn-default" title="Remove this @login.LoginProvider login from your account">Eliminar</button>
                                </div>
                            </form>
                        }
                        else
                        {
                            @: &nbsp;
                    }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@if (Model.OtherLogins?.Count > 0)
{
    <h4>Agregar otro servicio para iniciar sesi&oacute;n.</h4>
    <hr />
    <form asp-action="LinkLogin" method="post" class="form-horizontal">
        <div id="socialLoginList">
            <p>
                @foreach (var provider in Model.OtherLogins)
                {
                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Inicia sesión con tu cuenta @provider.DisplayName">@provider.DisplayName</button>
                }
            </p>
        </div>
    </form>
}
